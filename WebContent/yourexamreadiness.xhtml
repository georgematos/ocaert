<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:p="http://primefaces.org/ui">
	
	<h:head>
		<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
		<h:outputStylesheet library="style" name="bootstrap.css" />
		<title>Exam Readiness Topics</title>
		
	</h:head>
	
	<h:body>
		
		<div id="topics">
		
				<h1 align="center" style="background-color: orange; color: white">OCA Java SE 7 Programmer I - Exam Readiness Table</h1>
				<br />
				<br />
				<h:form>
				<div id="user_data" align="center" >
					
					<h:panelGrid columns="2" border="1" cellpadding="3" styleClass="panelgrid">
						<p:outputLabel value="Name:" />
						<h:outputText value="#{examReadinessBean.user.name}" />				
						<p:outputLabel value="Level:" />
						<h:outputText value="#{examReadinessBean.user.uer.rate}" />
						<p:outputLabel value="Birthday:" />
						<h:outputText value="#{examReadinessBean.user.birthday}">
							<f:convertDateTime locale="pt_BR" />
						</h:outputText>
						<p:outputLabel value="Subscript date:" />
						<h:outputText value="#{examReadinessBean.user.subscriptionDate}">
							<f:convertDateTime locale="pt_BR" />
						</h:outputText>
					</h:panelGrid>
					
				</div>
			
					
					<h3> 1 Java Basics </h3>
					<br />
						<!-- 
							ExamReadinessBean:
							user: User user
							uer: UserExamReadiness uer
							jb: JavaBasics jb 
						-->
					<h:panelGrid columns="2" cellpadding="5" styleClass="panelgrid" border="1" >
						
						<b>1.1</b> Define the scope of variables
						<p:rating stars="3" value="#{examReadinessBean.user.uer.jb.jb11}" />
						
						<b>1.2</b> Define the structure of a Java class
						<p:rating stars="3" value="#{examReadinessBean.user.uer.jb.jb12}" />
						
						<b>1.3</b> Create executable Java applications with a main method
						<p:rating stars="3" value="#{examReadinessBean.user.uer.jb.jb13}" />
						
						<b>1.4</b> Import other Java packages to Make them accessible in your code
						<p:rating stars="3" value="#{examReadinessBean.user.uer.jb.jb14}" />
						
					</h:panelGrid>
					<p:commandButton value="Save" action="#{examReadinessBean.update}" ajax="false" />
					
					<br />
					<h3>2 Woking With Java Data Types</h3>
					<br />
					<h:panelGrid columns="2" cellpadding="5" styleClass="panelgrid" border="1">
					
						<b>2.1</b> Declare and Intialize variables
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwjdt.wwjdt21}" />
						
						<b>2.2</b> Differentiate between object reference variables and primitive variables
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwjdt.wwjdt22}" />
					
						<b>2.3</b> Read or write to object fields
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwjdt.wwjdt23}" />
						
						<b>2.4</b> Explain an object's life cycle
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwjdt.wwjdt24}" />
		
						<b>2.5</b> Call methods on objects
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwjdt.wwjdt25}" />
						
						<b>2.6</b> Manipulate data using the StringBuilder class and its methods
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwjdt.wwjdt26}" />
						
						<b>2.7</b> Create and manipulate strings
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwjdt.wwjdt27}" />
					
					</h:panelGrid>
					<p:commandButton value="Save" action="#{examReadinessBean.update}" ajax="false" />
					
					<br />
					<h3>3 Using operators and decision constructs</h3>
					<br />
					<h:panelGrid columns="2" cellpadding="5" styleClass="panelgrid" border="1">
						
						<b>3.1</b> Use Java operators
						<p:rating stars="3" value="#{examReadinessBean.user.uer.uoadc.uoadc31}" />
						
						<b>3.2</b> Use parentheses to override operator precedence
						<p:rating stars="3" value="#{examReadinessBean.user.uer.uoadc.uoadc32}" />
						
						<b>3.3</b> Test equality between string and other objects using == and equals()
						<p:rating stars="3" value="#{examReadinessBean.user.uer.uoadc.uoadc33}" />
						
						<b>3.4</b> Create if and if-else constructs
						<p:rating stars="3" value="#{examReadinessBean.user.uer.uoadc.uoadc34}" />
						
						<b>3.5</b> Use a switch statement
						<p:rating stars="3" value="#{examReadinessBean.user.uer.uoadc.uoadc35}" />
						
					</h:panelGrid>
					<p:commandButton value="Save" action="#{examReadinessBean.update}" ajax="false" />
					
					<br />
					<h3>4 Creating and using arrays</h3>
					<br />
					<h:panelGrid columns="2" cellpadding="5" styleClass="panelgrid" border="1">
						
						<b>4.1</b> Use Java operators
						<p:rating stars="3" value="#{examReadinessBean.user.uer.caua.caua41}" />
						
						<b>4.2</b> Use parentheses to override operator precedence
						<p:rating stars="3" value="#{examReadinessBean.user.uer.caua.caua42}" />
						
						<b>4.3</b> Test equality between string and other objects using == and equals()
						<p:rating stars="3" value="#{examReadinessBean.user.uer.caua.caua43}" />
						
					</h:panelGrid>
					<p:commandButton value="Save" action="#{examReadinessBean.update}" ajax="false" />
					
					<br />
					<h3>5 Using loop constructs</h3>
					<br />
					<h:panelGrid columns="2" cellpadding="5" styleClass="panelgrid" border="1">
						
						<b>5.1</b> Create and use while loops
						<p:rating stars="3" value="#{examReadinessBean.user.uer.ulc.ulc51}" />
						
						<b>5.2</b> Create and use for loops, including the enhanced for loop
						<p:rating stars="3" value="#{examReadinessBean.user.uer.ulc.ulc52}" />
						
						<b>5.3</b> Create and use do-while loops
						<p:rating stars="3" value="#{examReadinessBean.user.uer.ulc.ulc53}" />
		
						<b>5.4</b> Compare loop constructs
						<p:rating stars="3" value="#{examReadinessBean.user.uer.ulc.ulc54}" />
		
						<b>5.5</b> Use break and continue
						<p:rating stars="3" value="#{examReadinessBean.user.uer.ulc.ulc55}" />
						
					</h:panelGrid>
					<p:commandButton value="Save" action="#{examReadinessBean.update}" ajax="false" />
					
					<br />
					<h3>6 Working with methods and encapsulation</h3>
					<br />
					<h:panelGrid columns="2" cellpadding="5" styleClass="panelgrid" border="1">						
						<b>6.1</b> Create methods with arguments and return values
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwmae.wwmae61}" />
						
						<b>6.2</b> Apply the static keyword to methods and fields
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwmae.wwmae62}" />
						
						<b>6.3</b> Create an overloaded method
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwmae.wwmae63}" />
		
						<b>6.4</b> Differentiate between default and user-defined constructors
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwmae.wwmae64}" />
		
						<b>6.5</b> Create overloaded constructors
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwmae.wwmae65}" />
						
						<b>6.6</b> Apply access modifiers
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwmae.wwmae66}" />
						
						<b>6.7</b> Apply encapsulation principles to a class
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwmae.wwmae67}" />
						
						<b>6.8</b> Determine the effect upon object references and primitive values when they<br/>
						are passed into methods that change the values
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwmae.wwmae68}" />
						
					</h:panelGrid>
					<p:commandButton value="Save" action="#{examReadinessBean.update}" ajax="false" />
					
					<br />
					<h3>7 Working with Inheritance</h3>
					<br />
					<h:panelGrid columns="2" cellpadding="5" styleClass="panelgrid" border="1">
						
						<b>7.1</b> Implements Inheritance
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwi.wwi71}" />
						
						<b>7.2</b> Develop code that demostrates the use of polymorphismo
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwi.wwi72}" />
						
						<b>7.3</b> Differentiate between the type of a reference and the type of an object
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwi.wwi73}" />
		
						<b>7.4</b> Determine when casting is necessary
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwi.wwi74}" />
		
						<b>7.5</b> Use super and this to access objects and constructors
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwi.wwi75}" />
						
						<b>7.6</b> Use abstract classes and interfaces
						<p:rating stars="3" value="#{examReadinessBean.user.uer.wwi.wwi76}" />
						
					</h:panelGrid>
					<p:commandButton value="Save" action="#{examReadinessBean.update}" ajax="false" />
					
					<br />
					<h3>8 Handling exceptions</h3>
					<br />
					<h:panelGrid columns="2" cellpadding="5" styleClass="panelgrid" border="1">
											
						<b>8.1</b> Differenteate among checked exceptions, RuntimeExceptions and Erros
						<p:rating stars="3" id="r8_1" value="#{examReadinessBean.user.uer.he.he81}" />
						
						<b>8.2</b> Create a try-catch block and determine how exceptions alter normal program flow
						<p:rating stars="3" id="r8_2" value="#{examReadinessBean.user.uer.he.he82}" />
						
						<b>8.3</b> Describe what exceptions are used for in Java
						<p:rating stars="3" id="r8_3" value="#{examReadinessBean.user.uer.he.he83}" />
		
						<b>8.4</b> Invoke a method that throws an exception
						<p:rating stars="3" id="r8_4" value="#{examReadinessBean.user.uer.he.he84}" />
		
						<b>8.5</b> Recognize common exception classes and categories
						<p:rating stars="3" id="r8_5" value="#{examReadinessBean.user.uer.he.he85}" />
						
					</h:panelGrid>
					<p:commandButton value="Save" action="#{examReadinessBean.update}" ajax="false" />
				</h:form>
		</div>
		
	</h:body>

</html>